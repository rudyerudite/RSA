from Crypto.Util.number import *

'''from Crypto.PublicKey import RSA
f1 = open("pubkey1.txt", "r")
key = RSA.importKey(f1.read())
print "n1 =", key.n
print "e1 =", key.e

f2 = open("pubkey1.txt", "r")
key = RSA.importKey(f1.read())
print "n1 =", key.n
print "e1 =", key.e

f3 = open("flag.enc", "r")
print f3.read().encode('hex')
'''
n1 = 554264859105764813308660999731057971935100899008191382001838196926947542874512190874402841957978974562758951331436856029517893995971179950228409634742368823490858553015862605452077729540463185207987338059905256552215054036643656077780363670065154151957507791559734841291875379738678210733333998195096643491711
e1 = 37507589401
n2 = 554264859105764813308660999731057971935100899008191382001838196926947542874512190874402841957978974562758951331436856029517893995971179950228409634742368823490858553015862605452077729540463185207987338059905256552215054036643656077780363670065154151957507791559734841291875379738678210733333998195096643491711
e2 = 4268405784672563577566143285906824408738650526784746749170468318123056940297449811287105187623419766934370809781249030117023876215912795037797160740003478418767197450012472858547143622542113157392499087427939336504102036205305906052998841826136038160560099357503377453502865716581429205507834478651
ct =int("0x02acd7d7f075333f571c1e342ccfdee05d9262beef9398e54d25f0c3a72d4817ce61971e546923bf5726299be22fd8a74fba6e39ca6b4c2cac7d88480a10f32c26ab5f84bc772c763094e7d4ad81a4d8b8c03bf19045303713ef53cf162fce89ca73ca6376bd73d808d9e9818a160c6be205591583032871127cbb363946812527",16)

def c_fraction(e,n):
	cf=[]
	q=e/n
	r=e%n
	cf.append(q)

	while (r!=0):
		e,n=n,r
		q=e/n
		r=e%n
		cf.append(q)
	return cf


def convergent(cf):
	#divide numerators and denominators into two different lists
	num = []
	denom = []
	conv = []
	for i in range(len(cf)):
		if(i==0):
			num.append(cf[0])
			denom.append(1)
		elif(i==1):
			num.append(cf[1]*cf[0]+1)
			denom.append(cf[1])
		else:
			num.append(cf[i]*num[i-1]+num[i-2])
			denom.append(cf[i]*denom[i-1]+denom[i-2])
		
	return num,denom

e=e1*e2
k=c_fraction(e,n1)
l=convergent(k)

print("Tobias")
for i in l[1]:
	m=pow(ct,i,n1)
	m=long_to_bytes(m)
	#print(m)
	if(m[:4]=='CTF{'):
		print(m)